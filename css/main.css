


/* VISUAL */
.visual{
  margin-top:120px;
  /* header의 높이값(header의 inner) */
  background-image:url("../images/visual_bg.jpg");
  background-position: center;
}

.visual .inner{
height: 646px;
}

.visual .title{
  position: absolute;
  top:88px;
  left:-10px;
}

.visual .title .btn{
  position: absolute;
  top:259px;
  left:173px;
  
}
.visual .cup1.image{
  position: absolute;
  bottom:0;
  right:-47px;
}
.visual .cup1.text{
  position: absolute;
  top: 38px;
  right:171px;

}

.visual .cup2.image{
  position: absolute;
  bottom:0;
  right:162px;
}
.visual .cup2.text{
  position: absolute;
  top:321px;
  right:416px;
}

.visual .spoon{
  position: absolute;
  bottom:0;
  left:275px;
}

.visual .fade-in{
  opacity:0;
  /* 투명상태 */
}

/* notice */
.notice{

}
.notice .notice-line{
  position: relative;
}
/* 나중에 정리할때 inner랑 bg left right가 왜 같이 공존하는지 적기. inner는 중앙일뿐임. 끝까지 채울라면 bg가있어야됨 */
.notice .notice-line .bg-left{
  position: absolute;
  /* 부모 요소를 기준으로 하겠다! */
  top : 0;
  left: 0;
  width: 50%;
  height: 100%;
  background-color: #333333;
}
.notice .notice-line .bg-right{
  position: absolute;
  top : 0;
  right: 0;
  width: 50%;
  height: 100%;
  background-color: #f6f5ef;
}
.notice .notice-line .inner{
  height: 62px;
  display:flex;
  /* 이게 늘어나면 어떻게될까? inner가 커지면 부모요소인 notice-line 의 height도 커짐( height를 지정하지않으면 최소로 지정되니까)
  이때 부모가 커지면서 bg-left, right가 같이 커짐 why? height가 100%! 니까 
  inner를 쓰지않게되면 bg-left , right의 height를 %가 아닌 px 등으로 각각 변경해줘야되는 불편함이 있음. */
}

.notice .notice-line .inner .inner__left{
  width: 60%;
  height: 100%;
  background-color: #333333;
  display: flex;
  align-items: center;
  
}
.notice .notice-line .inner .inner__left h2{
  color:#fff;
  font-size:17px;
  font-weight:700;
  margin-right:20px;
}
.notice .notice-line .inner .inner__left .swiper{
  flex-grow:1;
  height: 62px;
  /* 부모요소의 align-items가 추가되면서 높이값이 필요해짐 */
}
.notice .notice-line .inner .inner__left .swiper .swiper-slide{
 height: 62px;
 display: flex;
 /* align-items 쓸라면 flex 해야함 */
 align-items: center;
}
.notice .notice-line .inner .inner__left .swiper .swiper-slide a{
  color:#fff;
}
.notice .notice-line .inner .inner__left .notice-line__more{
  width: 62px;
  height: 62px;
  display: flex;
  /* flex가 없으면 정렬이 될까? */
  justify-content: center;
  align-items: center;
}
.notice .notice-line .inner .inner__left .notice-line__more .material-icons{
  color:#fff;
  font-size:30px;
  
  /* 기본 size : 24px; */
}
.notice .notice-line .inner .inner__right{
  width: 40%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: flex-end;
}
.notice .notice-line .inner .inner__right h2{
  font-size:17px;
  font-weight: 700;
  margin-right:20px;
  
}

.notice .notice-line .inner .inner__right .toggle-promotion{
  width: 62px;
  height: 6px;
  cursor: pointer;
  display:flex;
  justify-content: center;
  align-items: center;
}
.notice .notice-line .inner .inner__right .toggle-promotion .material-icons{
  font-size:30px;

}

.notice .promotion{
  height: 693px;
  background-color: #f6f5ef;
  position: relative;
  transition: height .4s;
  overflow:hidden;
  /* overflow가 없으면 들어잇던 것들이 넘쳐버림. 그래서 사라지는 효과 동작 X 그래서 
  overflow hidden을 통해 넘치는거 없애기! 해야됨. */
}

.notice .promotion.hide{
  height: 0;
}

/* 이게 항상 가운데를 유지?  확대했을때에도 계속 가운데를 유지하도록?*/
.notice .promotion .swiper{
  width: calc(819px * 3 + 20px);
  height: 553px;
  position: absolute;
  top:40px;
  left:50%;
  margin-left: calc( (819px * 3 + 20px)/2 * -1 );
  /* 이놈이 가진 width의 반만큼을 -해주면 항상 가운데에 위치해있음. 
  위치는 50% 지점으로 옮겨놓고 다시 반 만큼을 땡겨와서 항상 가운데에있는것처럼 보인다 ?
  */
}

/* swiper-slid-active : 가운데 있는놈이 갖게되는 class */
.notice .promotion .swiper-slide{
  opacity: .5;
  transition: opacity 1s;
  position: relative;
}
.notice .promotion .swiper-slide-active{
  opacity: 1;
}

.notice .promotion .swiper-slide .btn{
  position: absolute;
  bottom:0;
  left:0;
  right:0;
  margin:auto;
  
}

.notice .promotion .swiper-pagination{
  bottom:40px;
  left:0;
  right:0;
}

.notice .promotion .swiper-pagination .swiper-pagination-bullet{
  background-color:transparent;
  background-image:url("../images/promotion_slide_pager.png");
  width: 12px;
  height: 12px;
  margin-right:6px;
  outline:none;
  /* 선택할때 파랗게되면서 커지는 현상 제거 */
}
.notice .promotion .swiper-pagination .swiper-pagination-bullet:last-child{
  margin-right:0;
  /* 마지막 요소는 마진 필요없으니까  */
}

.notice .promotion .swiper-pagination .swiper-pagination-bullet-active{
  background-image:url("../images/promotion_slide_pager_on.png");

}
/* 동일하면 이렇게 다중 선택자 사용가능. */
.notice .promotion .swiper-button-prev,
.notice .promotion .swiper-button-next{
  width: 42px;  
  height: 42px;
  border:2px solid #333;
  border-radius:50%;
  position: absolute;
  top:300px;
  z-index:1;
  cursor: pointer;
  outline:none;
  transition: .4s;
  /* display:flex; */
}




.notice .promotion .swiper-button-prev{
  left:50%;
  margin-left: -480px;
  color:#333;
}

.notice .promotion .swiper-button-next{
  right:50%;
  margin-right:-480px;
  color:#333;
}

.notice .promotion .swiper-button-prev::after{
  content:"";
}
.notice .promotion .swiper-button-next::after{
  content:"";
}

.notice .promotion .swiper-button-prev:hover,
.notice .promotion .swiper-button-next:hover{
  background-color: #333;
  color:#fff;
}
/* rewards */
.rewards{
  position: relative;
}
.rewards .bg-left{
  width: 50%;
  height: 100%;
  background-color: #272727;
  position: absolute;
  top:0;
  left:0;

}
.rewards .bg-right{
  width: 50%; 
  height: 100%;
  position: absolute;
  top:0;
  right:0;
  background-color: #d5c798;
}
.rewards .inner{
  background-image: url("../images/rewards.jpg");
  height: 241px;
  /* position: relative가 없네? 할수있지만 common쪽 inner에 position relative를 설정해놨음. */
}

/* flex-wrap / grow  공부 필요 */
.rewards .inner .btn-group{
  position: absolute;
  width: 250px;
  display:flex;
  flex-wrap:wrap;
  bottom:24px;
  right:0;
}
.rewards .btn-group .btn.sign-up{
  margin-right:10px;
}

.rewards .btn-group .btn.sign-in{
  width: 110px;
}

.rewards .btn-group .btn.gift{
  margin-top:10px;
  flex-grow:1;
}

/* 그냥 예시 -> 부모의 width가 500px 일때 / 자식요소의 height 속성이 0이고 padding-top:50%를 주게되면 %의 기준은 부모의 width가됨.
-> 유투브 영상같은걸 보여줄때 보통 16:9를 지정함. 그래서 padding-top:56.25% 를 지정해주면 된다. */


/* YOUTUBE */
.youtube{
  position: relative;
  height: 700px;
  overflow:hidden;
  background-color:#333;
  /* 가운데 일부분만 영상을 보여줌. */
}

.youtube .youtube__area{
  width: 1920px;
  background-color: orange;
  position: absolute;
  left:50%;
  margin-left:calc(1920px/-2);
  top:50%;
  margin-top:calc(1920px * 9 / 16 / -2);
}
/* style을 위해 html에 요소를 추가해주기보다는 아래처럼 가상클래스를 만들어서 작업해주는게 좋다. after로 해도 동일하게 동작함.*/
.youtube .youtube__area::before{
  content:"";
  display:block;
  width: 100%;
  height: 0;
  padding-top:56.25%;
}
/* youtube 영상을 출력해주는ㄴ 부분에 cover이미지를 불투명하게 씌워서 그냥 배경 유투브 영상이야~ 같은 느낌을 주기위한 css */
.youtube .youtube__cover{
  background-image: url("../images/video_cover_pattern.png");
  background-color: rgba(0,0,0,0.3);
  position: absolute;
  top:0;
  left:0;
  width: 100%;
  height: 100%;
}

#player{
  width:100%;
  height:100%;
  position: absolute;
  top:0;
  left:0;
}


.youtube .inner{
  height: 700px;
}

.youtube .floating1{
  position: absolute;
  top:50px;
  left:0;
}

.youtube .floating2{
  position: absolute;
  top:350px;
  left:150px;

}

/* 이놈이 짤리는데 짤리는건 나중에 해결.
.youtube .floating3{
  position: absolute;
  bottom:-200px;
  right:0;
} */


/* SEASON PRODUCT */

.season-product{
  background-image: url("../images/season_product_bg.jpg");
}

.season-product .inner{
  height: 400px;
  /* display:flex; */

}
.season-product .floating3{
  position: absolute;
  top:-200px;
  right:0;
}
.season-product .text-group{
  position: absolute;
  right:100px;
  top:110px;
}

.season-product .text-group .title{
  margin-bottom:10px
}


.season-product .text-group .description{
  margin-bottom:15px;
}

.season-product .text-group .more{

}


.reserve-coffee{
  background-image:url("../images/reserve_bg.jpg");
}

.reserve-coffee .inner{
  height: 400px;
}

.reserve-coffee .reserve-logo{
  position: absolute;
  top:110px;
  left:0;
}

.reserve-coffee .text-group{
  position: absolute;
  top:124px;
  left:208px;
}

.reserve-coffee .product{
  position: absolute;
  top:0;
  right:0;
}

.pick-your-favorite{
  background-image:url("../images/favorite_bg.jpg");
  background-repeat:no-repeat;
  background-position: center;
  background-attachment: fixed;
  /* 이미자가 고정 : 스크롤 될때 같이 움직이지 않음. 시간차 애니메이션 효과 ?*/
  background-size:cover;
}

.pick-your-favorite .inner{
  padding: 110px 0;
}

.pick-your-favorite .text-group{
  display:flex;
  width:362px;
  flex-wrap:wrap;  /* 줄바꿈 가능. */
  justify-content: flex-end;/*오른쪽 정렬*/
  margin-left:100px;

}

.pick-your-favorite .text-group .title{
  margin-bottom:40px;
}

.pick-your-favorite .text-group .description{
  margin-bottom:40px;
}
.pick-your-favorite .text-group .btn{

}

/* RESERVE STORE */

.reserve-store{
  background-image:url("../images/reserve_store_bg.jpg");
  background-repeat:no-repeat;
  background-position: center;
  background-attachment: fixed;
  /* 이미자가 고정 : 스크롤 될때 같이 움직이지 않음. 시간차 애니메이션 효과 ?*/
  background-size:cover;
}
.reserve-store .inner{
  height: 600px;
  display:flex;
  justify-content: center; /*수평 */
  align-items: center; /*수직*/
}

.reserve-store .medal{
  width: 334px;
  height: 334px;
  perspective: 300px;
  /* 원금감 */
}
.reserve-store .medal .front,
.reserve-store .medal .back{
  position: absolute;
  width: 334px;
  height: 334px;
  backface-visibility: hidden;
  transition:1s;
}


.reserve-store .medal .front{
  
  /* absolute하게되면 두개가 겹쳐짐 */
  transform: rotateY(0deg);
}
.reserve-store .medal:hover .front{
  transform: rotateY(180deg);
}
.reserve-store .medal .back{
  transform: rotateY(-180deg);
}

.reserve-store .medal:hover .back{
  transform: rotateY(0deg);
}

.reserve-store .medal:hover .back .btn{
  position: absolute;
  left:0;
  right:0;
  top:240px;
  margin:auto;
}


/* FIND THE STORE */
.find-store{
  background-image:url("../images/find_store_bg.jpg");
}

.find-store .inner{
  height: 400px;
}

.find-store .texture1{
  position: absolute;
  top:0;
  left:400px;
}

.find-store .texture2{
  position: absolute;
  bottom:0;
  right:0;
}
.find-store .picture{
  border-radius: 50%;
  /* 50%면 동그라미 */
  box-shadow:2px 2px 8px rgba(0,0,0,.5);
  position: absolute; 
}
.find-store .picture1{
 
  left:0;
  top:-60px;
  border-radius: 50%;
}

.find-store .picture2{
  left:250px;
  top: 150px;
  
}
.find-store .text-group{
  position: absolute; 
  left:550px;
  top:120px;
  
}

.find-store .text-group .title{
  margin-bottom:20px;
}

.find-store .text-group .description{
  margin-bottom:20px;
}

.awards{
  background-color: #272727;
}
.awards .inner{
  padding: 40px 0;
}

.awards .swiper{
  width: 100%;
  height: 40px;
}

/* 동일하면 이렇게 다중 선택자 사용가능. */
.awards .swiper-button-prev,
.awards .swiper-button-next{
  width: 42px;  
  height: 42px;
  border:2px solid #fff;
  border-radius:50%;
  position: absolute;
  /* z-index:1; */
  cursor: pointer;
  outline:none;
  transition: .4s;
  color:#fff;
  
  /* display:flex; */
}


.awards .swiper-button-prev{
  left:-100px;
  
  /* color:#fff; */
}

.awards .swiper-button-next{
  right:-100px;
  
  /* color:#fff; */
}

.awards .swiper-button-prev::after{
  content:"";
}
.awards .swiper-button-next::after{
  content:"";
}

.awards .swiper-button-prev:hover,
.awards .swiper-button-next:hover{
  background-color: #fff;
  color:#333;
}

#to-top{
  width: 42px;
  height: 42px;
  background-color: #333333;
  color:#fff;
  cursor:pointer;
  border: 2px solid #fff;
  border-radius:10px;
  display:flex;
  justify-content: center;
  align-items: center;
  /* viewpoint를 기준으로 위치시키려고 fixed 사용. 화면 아래에 계속 있으니까 (생겼을떄) */
  position:fixed;
  bottom:30px;
  right:30px;
  z-index:9;

}